[{"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\index.tsx":"1","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\reportWebVitals.ts":"2","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\App.tsx":"3","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\nav\\Kategorite.tsx":"4","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\nav\\NavBar.tsx":"5","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Faqja\\Fronti.tsx":"6","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetajetProduktit.tsx":"7","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetajetKlientit.tsx":"8","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\FaturimiLayout\\Faturimi.tsx":"9","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\DashboardLayout\\DashboardFinal.tsx":"10","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\DashboardLayout\\SideBarDashboard\\dash.tsx":"11","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Product\\ProductDashboard.tsx":"12","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Sector\\SectorDashboard.tsx":"13","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Product\\ProductList.tsx":"14","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Sector\\SectorList.tsx":"15","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Brands\\BrandDashboard.tsx":"16","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Brands\\BrandList.tsx":"17","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Crud-Forma\\productForm.tsx":"18","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetailsShow\\ProductDetails.tsx":"19","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Crud-Forma\\sectorForma.tsx":"20","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetailsShow\\SectorDetails.tsx":"21","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Crud-Forma\\brandForm.tsx":"22","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetailsShow\\BrandDetails.tsx":"23","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\HomePageLayout\\Home.tsx":"24","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\API\\agent.ts":"25","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\Slider\\components\\ImageSlider.tsx":"26","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\Slider\\components\\SliderData.tsx":"27","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\ProductItems\\HomeItems.tsx":"28","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\ProductItems\\Styles.tsx":"29","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\HomePageLayout\\AppStyles.tsx":"30"},{"size":591,"mtime":1626178606345,"results":"31","hashOfConfig":"32"},{"size":440,"mtime":1624834076713,"results":"33","hashOfConfig":"32"},{"size":7135,"mtime":1626027913045,"results":"34","hashOfConfig":"32"},{"size":1160,"mtime":1625753583711,"results":"35","hashOfConfig":"32"},{"size":1661,"mtime":1626086721597,"results":"36","hashOfConfig":"32"},{"size":425,"mtime":1625753592700,"results":"37","hashOfConfig":"32"},{"size":459,"mtime":1625753625942,"results":"38","hashOfConfig":"32"},{"size":1059,"mtime":1624834076713,"results":"39","hashOfConfig":"32"},{"size":2123,"mtime":1625754248035,"results":"40","hashOfConfig":"32"},{"size":684,"mtime":1625754113298,"results":"41","hashOfConfig":"32"},{"size":1822,"mtime":1626159881284,"results":"42","hashOfConfig":"32"},{"size":1867,"mtime":1625840123724,"results":"43","hashOfConfig":"32"},{"size":1754,"mtime":1625753670149,"results":"44","hashOfConfig":"32"},{"size":3058,"mtime":1625753687646,"results":"45","hashOfConfig":"32"},{"size":2148,"mtime":1625753768579,"results":"46","hashOfConfig":"32"},{"size":1696,"mtime":1625753715113,"results":"47","hashOfConfig":"32"},{"size":2116,"mtime":1625753709873,"results":"48","hashOfConfig":"32"},{"size":4819,"mtime":1626027972659,"results":"49","hashOfConfig":"32"},{"size":1025,"mtime":1625753649149,"results":"50","hashOfConfig":"32"},{"size":1827,"mtime":1625753739259,"results":"51","hashOfConfig":"32"},{"size":839,"mtime":1625753640393,"results":"52","hashOfConfig":"32"},{"size":1792,"mtime":1625753729971,"results":"53","hashOfConfig":"32"},{"size":826,"mtime":1625753657199,"results":"54","hashOfConfig":"32"},{"size":1860,"mtime":1626178770692,"results":"55","hashOfConfig":"32"},{"size":1908,"mtime":1626027565178,"results":"56","hashOfConfig":"32"},{"size":1130,"mtime":1626020586296,"results":"57","hashOfConfig":"32"},{"size":268,"mtime":1626028775988,"results":"58","hashOfConfig":"32"},{"size":1352,"mtime":1626177849523,"results":"59","hashOfConfig":"32"},{"size":1123,"mtime":1626176976185,"results":"60","hashOfConfig":"32"},{"size":641,"mtime":1626179199295,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q1en4i",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\index.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\reportWebVitals.ts",[],["128","129"],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\App.tsx",["130"],"import React,{useState , useEffect } from 'react';\r\nimport {Container} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport Faturimi from './FaturimiLayout/Faturimi';\r\nimport { IProduct } from '../models/product';\r\nimport { Route } from 'react-router';\r\nimport ProductDashboard from '../../feautures/Details/DashboardDetails/Product/ProductDashboard';\r\nimport SectorDashboard from '../../feautures/Details/DashboardDetails/Sector/SectorDashboard';\r\nimport { ISector } from '../models/sector';\r\nimport { IBrand } from '../models/brand';\r\nimport BrandDashboard from '../../feautures/Details/DashboardDetails/Brands/BrandDashboard';\r\nimport { Home } from './HomePageLayout/Home';\r\nimport Dash from './DashboardLayout/SideBarDashboard/dash';\r\nimport agent from '../API/agent';\r\n\r\n\r\n\r\nconst App = () => { \r\n \r\n  const [products, setProducts] = useState<IProduct[]>([]);\r\n  const [sectors, setSectors] = useState<ISector[]>([]);\r\n  const [brands, setBrands] = useState<IBrand[]>([]);\r\n  \r\n    const [selectedProduct, setSelectedProduct] = useState<IProduct | null>(\r\n      null\r\n    );\r\n    const [editMode, setEditMode] = useState(false);\r\n  \r\n    const handleOpenCreateForm = () => {\r\n      setSelectedProduct(null);\r\n      setSelectedSector(null);\r\n\r\n      setEditMode(true);\r\n      \r\n    }\r\n  \r\n    const handleCreateProduct = (product: IProduct) => {\r\n      agent.Products.productCreate(product).then(()=>{\r\n        setProducts([...products, product]);\r\n        setSelectedProduct(product);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleEditProduct = (product: IProduct) => {\r\n      agent.Products.editProduct(product).then(()=>{\r\n        setProducts([...products.filter(p => p.productId !== product.productId), product])\r\n        setSelectedProduct(product);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleDeleteProduct = (productId: string) => {\r\n      agent.Products.deleteProduct(productId).then(()=>{\r\n        setProducts([...products.filter(p => p.productId !== productId)])\r\n      })\r\n    }\r\n  \r\n    const handleSelectProduct = (productId: string) => {\r\n      setSelectedProduct(products.filter(p => p.productId === productId)[0]);\r\n      setEditMode(false);\r\n    };\r\n    const [selectedSector, setSelectedSector] = useState<ISector | null>(\r\n      null\r\n    );\r\n  \r\n    const handleCreateSector = (sector: ISector) => {\r\n      agent.Sectors.sectorCreate(sector).then(()=>{\r\n        setSectors([...sectors, sector]);\r\n        setSelectedSector(sector);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleEditSector = (sector: ISector) => {\r\n      agent.Sectors.editSector(sector).then(()=>{\r\n        setSectors([...sectors.filter(s => s.sectorId !== sector.sectorId), sector])\r\n        setSelectedSector(sector);\r\n        setEditMode(false);\r\n      })\r\n      \r\n    }\r\n  \r\n    const handleDeleteSector = (sectorId: string) => {\r\n      agent.Sectors.deleteSector(sectorId).then(()=>{\r\n        setSectors([...sectors.filter(s => s.sectorId !== sectorId)])\r\n      })\r\n    }\r\n  \r\n    const handleSelectSector = (sectorId: string) => {\r\n      setSelectedSector(sectors.filter(s => s.sectorId === sectorId)[0]);\r\n      setEditMode(false);\r\n    };\r\n    const [selectedBrand, setSelectedBrand] = useState<IBrand | null>(\r\n      null\r\n    );\r\n  \r\n    const handleCreateBrand = (brand: IBrand) => {\r\n      agent.Brands.brandCreate(brand).then(() =>{\r\n        setBrands([...brands, brand]);\r\n        setSelectedBrand(brand);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleEditBrand = (brand: IBrand) => {\r\n      agent.Brands.editBrand(brand).then(()=>{\r\n        setBrands([...brands.filter(b => b.brandId !== brand.brandId), brand])\r\n        setSelectedBrand(brand);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleDeleteBrand = (brandId: string) => {\r\n      agent.Brands.deleteBrand(brandId).then(()=>{\r\n        setBrands([...brands.filter(b => b.brandId !== brandId)])\r\n      })\r\n    }\r\n  \r\n    const handleSelectBrand = (brandId: string) => {\r\n      setSelectedBrand(brands.filter(b => b.brandId === brandId)[0]);\r\n      setEditMode(false);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      agent.Products.productList()\r\n        .then((response) => {\r\n          let products: IProduct[] = [];\r\n          response.forEach((product) => {\r\n            product.productName = product.productName.split(\".\")[0];\r\n            products.push(product);\r\n          });\r\n          setProducts(products);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n      agent.Sectors.sectorList()\r\n        .then((response) => {\r\n          let sectors: ISector[] = [];\r\n          response.forEach((sector) => {\r\n            sector.sectorName = sector.sectorName.split(\".\")[0];\r\n            sectors.push(sector);\r\n          });\r\n          setSectors(sectors);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n      agent.Brands.brandList()\r\n        .then((response) => {\r\n          let brands: IBrand[] = [];\r\n          response.forEach((brand) => {\r\n            brand.brandName = brand.brandName.split(\".\")[0];\r\n            brands.push(brand);\r\n          });\r\n          setBrands(brands);\r\n        });\r\n    }, []);\r\n  \r\n\r\n\r\n    \r\n\r\n    return (\r\n      <Container>\r\n        <Route path=\"/faturimi\" component={Faturimi} />\r\n\r\n        <Route path=\"/dashboard\" component={Dash} />\r\n        <Route path=\"/\" component={Home} exact/>\r\n\r\n        <Route path=\"/dashboard/productmaster/product\">\r\n          <ProductDashboard\r\n          \r\n            products={products}\r\n            selectProduct={handleSelectProduct}\r\n            selectedProduct={selectedProduct}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedProduct={setSelectedProduct}\r\n            createProduct={handleCreateProduct}\r\n            editProduct={handleEditProduct}\r\n            deleteProduct={handleDeleteProduct}\r\n            openCreateForm={handleOpenCreateForm}\r\n          />\r\n        </Route>\r\n        <Route path=\"/dashboard/productmaster/sectors\">\r\n          <SectorDashboard\r\n            sectors={sectors}\r\n            selectSector={handleSelectSector}\r\n            selectedSector={selectedSector}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedSector={setSelectedSector}\r\n            createSector={handleCreateSector}\r\n            editSector={handleEditSector}\r\n            deleteSector={handleDeleteSector}\r\n            openCreateForm={handleOpenCreateForm}\r\n          />\r\n        </Route>\r\n        <Route path=\"/dashboard/productmaster/brands\">\r\n          <BrandDashboard\r\n            brands={brands}\r\n            selectBrand={handleSelectBrand}\r\n            selectedBrand={selectedBrand}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedBrand={setSelectedBrand}\r\n            createBrand={handleCreateBrand}\r\n            editBrand={handleEditBrand}\r\n            deleteBrand={handleDeleteBrand}\r\n            openCreateForm={handleOpenCreateForm}\r\n          />\r\n        </Route>\r\n      </Container>\r\n    );\r\n    \r\n    \r\n}\r\n \r\n\r\nexport default App;\r\n","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\nav\\Kategorite.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\nav\\NavBar.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Faqja\\Fronti.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetajetProduktit.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetajetKlientit.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\FaturimiLayout\\Faturimi.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\DashboardLayout\\DashboardFinal.tsx",["131","132","133","134"],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\DashboardLayout\\SideBarDashboard\\dash.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Product\\ProductDashboard.tsx",["135"],"import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { IProduct } from '../../../../app/models/product';\nimport { ISector } from '../../../../app/models/sector';\nimport ProductForm from '../../../Crud-Forma/productForm';\nimport ProductDetails from '../../DetailsShow/ProductDetails';\nimport ProductList from './ProductList';\n\n\n\ninterface IProps {\n  products:IProduct[];\n  selectProduct: (productId: string) => void;\n  selectedProduct: IProduct | null;\n  editMode: boolean;\n  setEditMode: (editMode: boolean) => void;\n  setSelectedProduct: (product: IProduct | null) => void;\n  createProduct: (product: IProduct) => void;\n  editProduct: (product: IProduct) => void;\n  deleteProduct: (productId: string) => void;\n  openCreateForm: () => void;\n\n}\n\nconst ProductDashboard: React.FC<IProps> = ({\n  products,\n  selectProduct,\n  selectedProduct,\n\n  editMode,\n  setEditMode,\n  setSelectedProduct,\n  createProduct,\n  editProduct,\n  deleteProduct,\n  openCreateForm\n}) => {\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ProductList\n          openCreateForm={openCreateForm}\n          products={products}\n          selectProduct={selectProduct}\n          deleteProduct={deleteProduct}\n        />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        {selectedProduct && !editMode && (\n          <ProductDetails\n            product={selectedProduct}\n            setEditMode={setEditMode}\n            setSelectedProduct={setSelectedProduct}\n          />\n        )}\n        {editMode && (\n          <ProductForm\n            key={(selectedProduct && selectedProduct.productId) || 0}\n            setEditMode={setEditMode}\n            product={selectedProduct!}\n            createProduct={createProduct}\n            editProduct={editProduct}\n          />\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ProductDashboard;\n","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Sector\\SectorDashboard.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Product\\ProductList.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Sector\\SectorList.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Brands\\BrandDashboard.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DashboardDetails\\Brands\\BrandList.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Crud-Forma\\productForm.tsx",["136","137"],"import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { Segment, Form, Button, DropdownProps, Dropdown } from 'semantic-ui-react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { IProduct } from '../../app/models/product';\r\nimport '../../app/layout/DashboardLayout/styles.css';\r\nimport { ISector } from '../../app/models/sector';\r\nimport agent from '../../app/API/agent';\r\nimport axios from 'axios';\r\nimport { IBrand } from '../../app/models/brand';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  product: IProduct;\r\n  createProduct: (product: IProduct) => void;\r\n  editProduct: (product: IProduct) => void;\r\n}\r\n\r\nconst ProductForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  product: initialFormState,\r\n  editProduct,\r\n  createProduct\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        productId: '',\r\n        productName: '',\r\n        sector: '',\r\n        brand: '',\r\n        valueOfProduct: '',\r\n        modelYear: '',\r\n        quantity: '',\r\n        description: ''\r\n        \r\n      };\r\n    }\r\n  };\r\n\r\n  const [product, setProduct] = useState<IProduct>(initializeForm);\r\n\r\n\r\n  const handleSubmit = () => {\r\n    if (product.productId.length === 0) {\r\n      let newProduct = {\r\n        ...product,\r\n        productId: uuid()\r\n      };\r\n      createProduct(newProduct);\r\n    } else {\r\n      editProduct(product);\r\n    }\r\n  };\r\n\r\n  const [sectors, setSectors] = useState<ISector[]>([]);\r\n  const [brands, setBrands] = useState<IBrand[]>([]);\r\n\r\n\r\n  useEffect(() => {\r\n    agent.Sectors.sectorList()\r\n      .then((response) => {\r\n        let sectors: ISector[] = [];\r\n        response.forEach((sector) => {\r\n          sector.sectorName = sector.sectorName.split(\".\")[0];\r\n          sectors.push(sector);\r\n        });\r\n        setSectors(sectors);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    agent.Brands.brandList()\r\n      .then((response) => {\r\n        let brands: IBrand[] = [];\r\n        response.forEach((brand) => {\r\n          brand.brandName = brand.brandName.split(\".\")[0];\r\n          brands.push(brand);\r\n        });\r\n        setBrands(brands);\r\n      });\r\n  }, []);\r\n  const handleBrandChange=(\r\n    ev: React.SyntheticEvent, {value}:any\r\n    )=>{\r\n      setProduct({...product,brand: value})\r\n    };\r\n  const handleSectorChange =(\r\n    ev: React.SyntheticEvent, {value}:any\r\n    )=>{\r\n      setProduct({...product,sector: value})\r\n    };\r\n  const handleInputChange = (\r\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = event.currentTarget;\r\n    setProduct({ ...product, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"productName\"\r\n          placeholder=\"Product Name\"\r\n          value={product.productName}\r\n        />\r\n\r\n        <Dropdown\r\n          placeholder=\"Select Sector\"\r\n          onChange={handleSectorChange}\r\n          fluid\r\n          search\r\n          selection\r\n          options={sectors.map((sector) => ({\r\n            key: sector.sectorId,\r\n            value: sector.sectorName,\r\n            text: sector.sectorName,\r\n          }))}\r\n          value={product.sector}\r\n        />\r\n\r\n        <Dropdown\r\n          placeholder=\"Select Brand\"\r\n          onChange={handleBrandChange}\r\n          fluid\r\n          search\r\n          selection\r\n          options={brands.map((brand) => ({\r\n            key: brand.brandId,\r\n            value: brand.brandName,\r\n            text: brand.brandName,\r\n          }))}\r\n          value={product.brand}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"valueOfProduct\"\r\n          type=\"numeber\"\r\n          step=\"0.01\"\r\n          placeholder=\"ValueOfProduct\"\r\n          value={product.valueOfProduct}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"modelYear\"\r\n          type=\"date\"\r\n          placeholder=\"Model Year\"\r\n          value={product.modelYear}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"quantity\"\r\n          type=\"number\"\r\n          placeholder=\"Quantity\"\r\n          value={product.quantity}\r\n        />\r\n        <Form.TextArea\r\n          onChange={handleInputChange}\r\n          name=\"description\"\r\n          rows={2}\r\n          placeholder=\"Description\"\r\n          value={product.description}\r\n        />\r\n        <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetailsShow\\ProductDetails.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Crud-Forma\\sectorForma.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetailsShow\\SectorDetails.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Crud-Forma\\brandForm.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\DetailsShow\\BrandDetails.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\HomePageLayout\\Home.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\API\\agent.ts",["138"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IBrand } from '../models/brand';\r\nimport { IProduct } from '../models/product';\r\nimport { ISector } from '../models/sector';\r\n\r\naxios.defaults.baseURL=\"http://localhost:5000/api\";\r\n\r\nconst responseBody = (response: AxiosResponse)=>response.data;\r\n\r\nconst requests = {\r\n    get: (url : string) => axios.get(url).then(responseBody),\r\n    post: (url : string , body: {}) => axios.post(url, body).then(responseBody),\r\n    put:(url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    del:(url: string) => axios.delete(url).then(responseBody)\r\n}\r\nconst Products = {\r\n    productList: () : Promise<IProduct[]> => requests.get('/product'),\r\n    productDetails :(productId: string) => requests.get(`/product/${productId}`),\r\n    productCreate : (product: IProduct) => requests.post('/product',product),\r\n    editProduct:(product: IProduct) => requests.put(`/product/${product.productId}`,product),\r\n    deleteProduct: (productId: string) => requests.del(`/product/${productId}`)\r\n}\r\nconst Sectors = {\r\n    sectorList: () : Promise<ISector[]> => requests.get('/sector'),\r\n    sectorDetails :(sectorId: string) => requests.get(`/sector/${sectorId}`),\r\n    sectorCreate : (sector: ISector) => requests.post('/sector',sector),\r\n    editSector:(sector: ISector) => requests.put(`/sector/${sector.sectorId}`,sector),\r\n    deleteSector: (sectorId: string) => requests.del(`/sector/${sectorId}`)\r\n}\r\nconst Brands = {\r\n    brandList: () : Promise<IBrand[]> => requests.get('/brand'),\r\n    brandDetails :(brandId: string) => requests.get(`/brand/${brandId}`),\r\n    brandCreate : (brand: IBrand) => requests.post('/brand',brand),\r\n    editBrand:(brand: IBrand) => requests.put(`/brand/${brand.brandId}`,brand),\r\n    deleteBrand: (brandId: string) => requests.del(`/brand/${brandId}`)\r\n}\r\n\r\nexport default {\r\n    Products,\r\n    Sectors,\r\n    Brands\r\n}\r\n\r\n\r\n","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\Slider\\components\\ImageSlider.tsx",["139"],"import React, { useState } from 'react';\nimport { SliderData } from './SliderData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\n\nconst ImageSlider = ({ slides }) => {\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return (\n    <section className='slider'>\n      <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n      <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n      {SliderData.map((slide, index) => {\n        return (\n          <div\n            className={index === current ? 'slide active' : 'slide'}\n            key={index}\n          >\n            {index === current && (\n              <img src={slide.image} alt='travel image' className='image' />\n            )}\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default ImageSlider;\n","D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\Slider\\components\\SliderData.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\ProductItems\\HomeItems.tsx",["140","141"],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\feautures\\Details\\HomeDetails\\ProductItems\\Styles.tsx",[],"D:\\Semestri-IV\\Programim\\Shop Management\\client-app\\src\\app\\layout\\HomePageLayout\\AppStyles.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"150","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":19},{"ruleId":"146","severity":1,"message":"151","line":2,"column":21,"nodeType":"148","messageId":"149","endLine":2,"endColumn":29},{"ruleId":"146","severity":1,"message":"152","line":7,"column":11,"nodeType":"148","messageId":"149","endLine":7,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":17},{"ruleId":"146","severity":1,"message":"154","line":2,"column":33,"nodeType":"148","messageId":"149","endLine":2,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":38,"column":1,"nodeType":"157","endLine":42,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":32,"column":15,"nodeType":"160","endLine":32,"endColumn":77},{"ruleId":"146","severity":1,"message":"150","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"151","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'IProps' is defined but never used.","'ISector' is defined but never used.","'DropdownProps' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]