{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semestri-IV\\\\Programim\\\\Shop Management\\\\client-app\\\\src\\\\app\\\\layout\\\\DashboardLayout\\\\dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, Input, Menu, Segment, Sidebar } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport './styles.css'; // import { IActivity } from '../models/activity';\n// import ActivityDashboard from '../../../features/activities/dashboard/AppDashboard';\n\nimport { SidebarData } from \"./SideBarDashboard/components/SidebarData\";\nimport Submenu from \"./SideBarDashboard/components/Submenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//   const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n//     null\n//   );\n//   const [editMode, setEditMode] = useState(false);\n//   const handleOpenCreateForm = () => {\n//     setSelectedActivity(null);\n//     setEditMode(true);\n//   }\n//   const handleCreateActivity = (activity: IActivity) => {\n//     setActivities([...activities, activity]);\n//     setSelectedActivity(activity);\n//     setEditMode(false);\n//   }\n//   const handleEditActivity = (activity: IActivity) => {\n//     setActivities([...activities.filter(a => a.id !== activity.id), activity])\n//     setSelectedActivity(activity);\n//     setEditMode(false);\n//   }\n//   const handleDeleteActivity = (id: string) => {\n//     setActivities([...activities.filter(a => a.id !== id)])\n//   }\n//   const handleSelectActivity = (id: string) => {\n//     setSelectedActivity(activities.filter(a => a.id === id)[0]);\n//     setEditMode(false);\n//   };\nconst HorizontalSidebar = ({\n  animation,\n  direction,\n  visible\n}) => /*#__PURE__*/_jsxDEV(Sidebar, {\n  as: Segment,\n  animation: animation,\n  direction: direction,\n  visible: visible\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 5\n}, this);\n\n_c = HorizontalSidebar;\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE_ANIMATION\":\n      return { ...state,\n        animation: action.animation,\n        visible: !state.visible\n      };\n\n    case \"CHANGE_DIMMED\":\n      return { ...state,\n        dimmed: action.dimmed\n      };\n\n    case \"CHANGE_DIRECTION\":\n      return { ...state,\n        direction: action.direction,\n        visible: false\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction SidebarExampleTransitions() {\n  _s();\n\n  const [products, setActivities] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/product\").then(response => {\n      let products = [];\n      response.data.forEach(product => {\n        product.productName = product.productName.split(\".\")[0];\n        products.push(product);\n      });\n      setActivities(products);\n    });\n  }, []);\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    animation: \"overlay\",\n    direction: \"left\",\n    visible: false\n  });\n\n  const VerticalSidebar = ({\n    animation,\n    direction,\n    visible\n  }) => /*#__PURE__*/_jsxDEV(Sidebar, {\n    as: Menu,\n    animation: animation,\n    direction: direction,\n    icon: \"labeled\",\n    inverted: true,\n    vertical: true,\n    visible: visible,\n    width: \"thin\",\n    children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n      as: \"a\",\n      children: SidebarData.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Submenu, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n\n  const {\n    animation,\n    dimmed,\n    direction,\n    visible\n  } = state;\n  const vertical = direction === \"bottom\" || direction === \"top\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test3\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        stackable: true,\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => dispatch({\n              type: \"CHANGE_ANIMATION\",\n              animation: \"push\"\n            }),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: \"icon\",\n            icon: \"search\",\n            placeholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            action: {\n              type: \"submit\",\n              content: \"Go\"\n            },\n            placeholder: \"Navigate to...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            negative: true,\n            children: \"Log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar.Pushable, {\n      as: Segment,\n      style: {\n        overflow: \"hidden\"\n      },\n      children: [vertical && /*#__PURE__*/_jsxDEV(HorizontalSidebar, {\n        animation: animation,\n        direction: direction,\n        visible: visible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), !vertical && /*#__PURE__*/_jsxDEV(VerticalSidebar, {\n        animation: animation,\n        direction: direction,\n        visible: visible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar.Pusher, {\n        dimmed: dimmed && visible,\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          basic: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SidebarExampleTransitions, \"qc9x0k7Ghu10qupJ62MFU9Vv3wY=\");\n\n_c2 = SidebarExampleTransitions;\n;\nexport default SidebarExampleTransitions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HorizontalSidebar\");\n$RefreshReg$(_c2, \"SidebarExampleTransitions\");","map":{"version":3,"sources":["D:/Semestri-IV/Programim/Shop Management/client-app/src/app/layout/DashboardLayout/dashboard.tsx"],"names":["React","useState","useEffect","Button","Icon","Input","Menu","Segment","Sidebar","axios","SidebarData","Submenu","HorizontalSidebar","animation","direction","visible","exampleReducer","state","action","type","dimmed","Error","SidebarExampleTransitions","products","setActivities","get","then","response","data","forEach","product","productName","split","push","dispatch","useReducer","VerticalSidebar","map","item","index","vertical","content","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\n\nimport { Button, Checkbox, Container, Dropdown, Grid, Header, Icon, Image, Input, Menu, Segment, Sidebar } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport './styles.css';\n// import { IActivity } from '../models/activity';\n// import ActivityDashboard from '../../../features/activities/dashboard/AppDashboard';\nimport AppDashboard from '../../../feautures/Details/DashboardDetails/AppDashboard';\nimport { IProduct } from \"../../models/product\";\nimport { SidebarData } from \"./SideBarDashboard/components/SidebarData\";\nimport Submenu from \"./SideBarDashboard/components/Submenu\";\nimport { Overview } from \"./pages/Overview\";\n\n  \n  //   const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n  //     null\n  //   );\n  //   const [editMode, setEditMode] = useState(false);\n\n  //   const handleOpenCreateForm = () => {\n  //     setSelectedActivity(null);\n  //     setEditMode(true);\n  //   }\n\n  //   const handleCreateActivity = (activity: IActivity) => {\n  //     setActivities([...activities, activity]);\n  //     setSelectedActivity(activity);\n  //     setEditMode(false);\n  //   }\n\n  //   const handleEditActivity = (activity: IActivity) => {\n  //     setActivities([...activities.filter(a => a.id !== activity.id), activity])\n  //     setSelectedActivity(activity);\n  //     setEditMode(false);\n  //   }\n\n  //   const handleDeleteActivity = (id: string) => {\n  //     setActivities([...activities.filter(a => a.id !== id)])\n  //   }\n\n  //   const handleSelectActivity = (id: string) => {\n  //     setSelectedActivity(activities.filter(a => a.id === id)[0]);\n  //     setEditMode(false);\n  //   };\n\n  \n  const HorizontalSidebar = ({ animation, direction, visible }) => (\n    <Sidebar\n      as={Segment}\n      animation={animation}\n      direction={direction}\n      visible={visible}\n    >\n      \n    </Sidebar>\n  );\n\n  \n\n  function exampleReducer(state, action) {\n    switch (action.type) {\n      case \"CHANGE_ANIMATION\":\n        return {\n          ...state,\n          animation: action.animation,\n          visible: !state.visible,\n        };\n      case \"CHANGE_DIMMED\":\n        return { ...state, dimmed: action.dimmed };\n      case \"CHANGE_DIRECTION\":\n        return { ...state, direction: action.direction, visible: false };\n      default:\n        throw new Error();\n    }\n  }\n\n  function SidebarExampleTransitions() {\n    const [products, setActivities] = useState<IProduct[]>([]);\n\n    useEffect(() => {\n      axios\n        .get<IProduct[]>(\"http://localhost:5000/api/product\")\n        .then((response) => {\n          let products: IProduct[] = [];\n          response.data.forEach((product) => {\n            product.productName = product.productName.split(\".\")[0];\n            products.push(product);\n          });\n          setActivities(products);\n        });\n    }, []);\n    const [state, dispatch] = React.useReducer(exampleReducer, {\n      animation: \"overlay\",\n      direction: \"left\",\n      visible: false,\n    });\n    \n    const VerticalSidebar = ({ animation, direction, visible }) => (\n    <Sidebar\n      as={Menu}\n      animation={animation}\n      direction={direction}\n      icon=\"labeled\"\n      inverted\n      vertical\n      visible={visible}\n      width=\"thin\"\n    >\n     \n      <Menu.Item as=\"a\">\n        \n        {SidebarData.map((item, index) => {\n                        return <Submenu item={item} key={index} />;\n                    })}\n      </Menu.Item>\n      \n    </Sidebar>\n  );\n\n    const { animation, dimmed, direction, visible } = state;\n    const vertical = direction === \"bottom\" || direction === \"top\";\n  \n    return (\n      <div>\n        <div className=\"test3\">\n          \n            <Menu stackable>\n              <Menu.Item>\n                <Button\n                  onClick={() =>\n                    dispatch({ type: \"CHANGE_ANIMATION\", animation: \"push\" })\n                  }\n                >\n                  <Icon name=\"list\" />\n                </Button>\n              </Menu.Item>\n\n              <Menu.Item>\n                <Input className=\"icon\" icon=\"search\" placeholder=\"Search...\" />\n              </Menu.Item>\n\n              <Menu.Item position=\"right\">\n                <Input\n                  action={{ type: \"submit\", content: \"Go\" }}\n                  placeholder=\"Navigate to...\"\n                />\n              </Menu.Item>\n              <Menu.Item>\n                <Button primary negative>\n                  Log out\n                </Button>\n              </Menu.Item>\n            </Menu>\n          \n        </div>\n\n        <Sidebar.Pushable as={Segment} style={{ overflow: \"hidden\" }}>\n          {vertical && (\n            <HorizontalSidebar\n              animation={animation}\n              direction={direction}\n              visible={visible}\n            />\n          )}\n          {!vertical && (\n            <VerticalSidebar\n              animation={animation}\n              direction={direction}\n              visible={visible}\n            />\n          )}\n\n          <Sidebar.Pusher dimmed={dimmed && visible}>\n            <Segment basic>\n\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    );\n  \n};\nexport default SidebarExampleTransitions;\n"]},"metadata":{},"sourceType":"module"}