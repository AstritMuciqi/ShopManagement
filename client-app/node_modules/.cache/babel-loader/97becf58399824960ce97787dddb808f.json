{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semestri-IV\\\\Programim\\\\Shop Management\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport axios from 'axios';\nimport Faturimi from './FaturimiLayout/Faturimi'; //import './styles.css';\n\nimport Dashboard from './DashboardLayout/DashboardFinal';\nimport { Route } from 'react-router';\nimport ProductDashboard from '../../feautures/Details/DashboardDetails/Product/ProductDashboard';\nimport SectorDashboard from '../../feautures/Details/DashboardDetails/Sector/SectorDashboard';\nimport BrandDashboard from '../../feautures/Details/DashboardDetails/Brands/BrandDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [sectors, setSectors] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleOpenCreateForm = () => {\n    setSelectedProduct(null);\n    setEditMode(true);\n  };\n\n  const handleCreateProduct = product => {\n    setProducts([...products, product]);\n    setSelectedProduct(product);\n    setEditMode(false);\n  };\n\n  const handleEditProduct = product => {\n    setProducts([...products.filter(p => p.productId !== product.productId), product]);\n    setSelectedProduct(product);\n    setEditMode(false);\n  };\n\n  const handleDeleteProduct = productId => {\n    setProducts([...products.filter(p => p.productId !== productId)]);\n  };\n\n  const handleSelectProduct = productId => {\n    setSelectedProduct(products.filter(p => p.productId === productId)[0]);\n    setEditMode(false);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/product\").then(response => {\n      let products = [];\n      response.data.forEach(product => {\n        product.productName = product.productName.split(\".\")[0];\n        products.push(product);\n      });\n      setProducts(products);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/sector\").then(response => {\n      let sectors = [];\n      response.data.forEach(sector => {\n        sector.sectorName = sector.sectorName.split(\".\")[0];\n        sectors.push(sector);\n      });\n      setSectors(sectors);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/brand\").then(response => {\n      let brands = [];\n      response.data.forEach(brand => {\n        brand.brandName = brand.brandName.split(\".\")[0];\n        brands.push(brand);\n      });\n      setBrands(brands);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/faturimi\",\n      component: Faturimi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      component: Dashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard/productmaster/product\",\n      children: /*#__PURE__*/_jsxDEV(ProductDashboard, {\n        products: products,\n        selectProduct: handleSelectProduct,\n        selectedProduct: selectedProduct,\n        editMode: editMode,\n        setEditMode: setEditMode,\n        setSelectedProduct: setSelectedProduct,\n        createProduct: handleCreateProduct,\n        editProduct: handleEditProduct,\n        deleteProduct: handleDeleteProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard/productmaster/sectors\",\n      children: /*#__PURE__*/_jsxDEV(SectorDashboard, {\n        sectors: sectors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard/productmaster/brands\",\n      children: /*#__PURE__*/_jsxDEV(BrandDashboard, {\n        brands: brands\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"c4szjSHsDImebzrtAkNiYyEgLg8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Semestri-IV/Programim/Shop Management/client-app/src/app/layout/App.tsx"],"names":["React","useState","useEffect","Container","axios","Faturimi","Dashboard","Route","ProductDashboard","SectorDashboard","BrandDashboard","App","products","setProducts","sectors","setSectors","brands","setBrands","selectedProduct","setSelectedProduct","editMode","setEditMode","handleOpenCreateForm","handleCreateProduct","product","handleEditProduct","filter","p","productId","handleDeleteProduct","handleSelectProduct","get","then","response","data","forEach","productName","split","push","sector","sectorName","brand","brandName"],"mappings":"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","sourcesContent":["import React,{useState , useEffect , Fragment} from 'react';\r\nimport {Container, Divider, Grid, List} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { IAdresaF } from '../models/adresaF';\r\n\r\nimport Faturimi from './FaturimiLayout/Faturimi';\r\n//import './styles.css';\r\nimport { IProduct } from '../models/product';\r\nimport Dashboard from './DashboardLayout/DashboardFinal';\r\nimport { Route } from 'react-router';\r\nimport ProductDashboard from '../../feautures/Details/DashboardDetails/Product/ProductDashboard';\r\nimport SectorDashboard from '../../feautures/Details/DashboardDetails/Sector/SectorDashboard';\r\nimport { ISector } from '../models/sector';\r\nimport { IBrand } from '../models/brand';\r\nimport BrandDashboard from '../../feautures/Details/DashboardDetails/Brands/BrandDashboard';\r\n\r\n\r\nconst App = () => { \r\n  const [products, setProducts] = useState<IProduct[]>([]);\r\n  const [sectors, setSectors] = useState<ISector[]>([]);\r\n  const [brands, setBrands] = useState<IBrand[]>([]);\r\n  \r\n    const [selectedProduct, setSelectedProduct] = useState<IProduct | null>(\r\n      null\r\n    );\r\n    const [editMode, setEditMode] = useState(false);\r\n  \r\n    const handleOpenCreateForm = () => {\r\n      setSelectedProduct(null);\r\n      setEditMode(true);\r\n    }\r\n  \r\n    const handleCreateProduct = (product: IProduct) => {\r\n      setProducts([...products, product]);\r\n      setSelectedProduct(product);\r\n      setEditMode(false);\r\n    }\r\n  \r\n    const handleEditProduct = (product: IProduct) => {\r\n      setProducts([...products.filter(p => p.productId !== product.productId), product])\r\n      setSelectedProduct(product);\r\n      setEditMode(false);\r\n    }\r\n  \r\n    const handleDeleteProduct = (productId: string) => {\r\n      setProducts([...products.filter(p => p.productId !== productId)])\r\n    }\r\n  \r\n    const handleSelectProduct = (productId: string) => {\r\n      setSelectedProduct(products.filter(p => p.productId === productId)[0]);\r\n      setEditMode(false);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get<IProduct[]>(\"http://localhost:5000/api/product\")\r\n        .then((response) => {\r\n          let products: IProduct[] = [];\r\n          response.data.forEach((product) => {\r\n            product.productName = product.productName.split(\".\")[0];\r\n            products.push(product);\r\n          });\r\n          setProducts(products);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n      axios\r\n        .get<ISector[]>(\"http://localhost:5000/api/sector\")\r\n        .then((response) => {\r\n          let sectors: ISector[] = [];\r\n          response.data.forEach((sector) => {\r\n            sector.sectorName = sector.sectorName.split(\".\")[0];\r\n            sectors.push(sector);\r\n          });\r\n          setSectors(sectors);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n      axios\r\n        .get<IBrand[]>(\"http://localhost:5000/api/brand\")\r\n        .then((response) => {\r\n          let brands: IBrand[] = [];\r\n          response.data.forEach((brand) => {\r\n            brand.brandName = brand.brandName.split(\".\")[0];\r\n            brands.push(brand);\r\n          });\r\n          setBrands(brands);\r\n        });\r\n    }, []);\r\n  \r\n\r\n\r\n    \r\n\r\n    return (\r\n      <Container>\r\n        <Route path=\"/faturimi\" component={Faturimi} />\r\n\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/dashboard/productmaster/product\">\r\n          <ProductDashboard\r\n            products={products}\r\n            selectProduct={handleSelectProduct}\r\n            selectedProduct={selectedProduct}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedProduct={setSelectedProduct}\r\n            createProduct={handleCreateProduct}\r\n            editProduct={handleEditProduct}\r\n            deleteProduct={handleDeleteProduct}\r\n          />\r\n        </Route>\r\n        <Route path=\"/dashboard/productmaster/sectors\">\r\n          <SectorDashboard sectors={sectors} />\r\n        </Route>\r\n        <Route path=\"/dashboard/productmaster/brands\">\r\n          <BrandDashboard brands={brands} />\r\n        </Route>\r\n      </Container>\r\n    );\r\n    \r\n    \r\n}\r\n \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}