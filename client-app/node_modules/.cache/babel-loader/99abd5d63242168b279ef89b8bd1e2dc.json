{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semestri-IV\\\\Programim\\\\Shop Management\\\\client-app\\\\src\\\\feautures\\\\Crud-Forma\\\\productForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Segment, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { v4 as uuid } from 'uuid';\nimport '../../app/layout/DashboardLayout/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = ({\n  setEditMode,\n  product: initialFormState,\n  editProduct,\n  createProduct\n}) => {\n  _s();\n\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        productId: '',\n        productName: '',\n        sector: '',\n        brand: '',\n        valueOfProduct: '',\n        modelYear: '',\n        quantity: '',\n        description: ''\n      };\n    }\n  };\n\n  const [product, setProduct] = useState(initializeForm); // const SectorOptions =[\n  //   {key:sectors?.sectorId,value: sectors?.sectorName}\n  // ];\n\n  const [sectors, sectorList] = useState([]);\n  useEffect(() => {\n    axios(\"http://localhost:5000/api/sector\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.data).then(resp => sectorList(resp));\n  }, []);\n\n  const handleSubmit = () => {\n    if (product.productId.length === 0) {\n      let newProduct = { ...product,\n        productId: uuid()\n      };\n      createProduct(newProduct);\n    } else {\n      editProduct(product);\n    }\n  };\n\n  const handleSectorChange = (ev, {\n    value\n  }) => {\n    setProduct({ ...product,\n      sector: value\n    });\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    clearing: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleInputChange,\n        name: \"productName\",\n        placeholder: \"Product Name\",\n        value: product.productName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Select Sector\",\n        onChange: handleSectorChange,\n        fluid: true,\n        search: true,\n        selection: true,\n        value: product.sector,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            selected: true,\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), sectors.map(sector => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              title: sector.sectorId,\n              children: sector.sectorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleInputChange,\n        name: \"brand\",\n        placeholder: \"Brand Name\",\n        value: product.brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleInputChange,\n        name: \"valueOfProduct\",\n        type: \"numeber\",\n        step: \"0.01\",\n        placeholder: \"ValueOfProduct\",\n        value: product.valueOfProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleInputChange,\n        name: \"modelYear\",\n        type: \"date\",\n        placeholder: \"Model Year\",\n        value: product.modelYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleInputChange,\n        name: \"quantity\",\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: product.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n        onChange: handleInputChange,\n        name: \"description\",\n        rows: 2,\n        placeholder: \"Description\",\n        value: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        floated: \"right\",\n        positive: true,\n        type: \"submit\",\n        content: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setEditMode(false),\n        floated: \"right\",\n        type: \"button\",\n        content: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductForm, \"0Vi/J9z88W2sGF+vcqaz2KwNyVc=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["D:/Semestri-IV/Programim/Shop Management/client-app/src/feautures/Crud-Forma/productForm.tsx"],"names":["React","useState","useEffect","Segment","Form","Button","Dropdown","v4","uuid","axios","ProductForm","setEditMode","product","initialFormState","editProduct","createProduct","initializeForm","productId","productName","sector","brand","valueOfProduct","modelYear","quantity","description","setProduct","sectors","sectorList","method","headers","then","resp","data","handleSubmit","length","newProduct","handleSectorChange","ev","value","handleInputChange","event","name","currentTarget","map","sectorId","sectorName"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { Segment, Form, Button, DropdownProps, Dropdown } from 'semantic-ui-react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { IProduct } from '../../app/models/product';\r\nimport '../../app/layout/DashboardLayout/styles.css';\r\nimport { ISector } from '../../app/models/sector';\r\nimport agent from '../../app/API/agent';\r\nimport axios from 'axios';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  product: IProduct;\r\n  createProduct: (product: IProduct) => void;\r\n  editProduct: (product: IProduct) => void;\r\n}\r\n\r\nconst ProductForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  product: initialFormState,\r\n  editProduct,\r\n  createProduct\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        productId: '',\r\n        productName: '',\r\n        sector: '',\r\n        brand: '',\r\n        valueOfProduct: '',\r\n        modelYear: '',\r\n        quantity: '',\r\n        description: ''\r\n        \r\n      };\r\n    }\r\n  };\r\n\r\n  const [product, setProduct] = useState<IProduct>(initializeForm);\r\n  \r\n\r\n  // const SectorOptions =[\r\n  //   {key:sectors?.sectorId,value: sectors?.sectorName}\r\n  // ];\r\n  const [sectors, sectorList] = useState<[ISector]>([]);\r\n\r\n  useEffect(() => {\r\n    axios(\"http://localhost:5000/api/sector\",{\r\n      method: 'GET',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      }\r\n    })\r\n    .then(resp=>resp.data)\r\n    .then(resp=>sectorList(resp))\r\n  },[])\r\n     \r\n    \r\n   \r\n\r\n\r\n  const handleSubmit = () => {\r\n    if (product.productId.length === 0) {\r\n      let newProduct = {\r\n        ...product,\r\n        productId: uuid()\r\n      };\r\n      createProduct(newProduct);\r\n    } else {\r\n      editProduct(product);\r\n    }\r\n  };\r\n  \r\n  const handleSectorChange =(\r\n    ev: React.SyntheticEvent, {value}:any\r\n  )=>{\r\n    setProduct({...product,sector: value})\r\n  }\r\n\r\n  const handleInputChange = (\r\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = event.currentTarget;\r\n    setProduct({ ...product, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"productName\"\r\n          placeholder=\"Product Name\"\r\n          value={product.productName}\r\n        />\r\n\r\n        <label>Sector</label>\r\n        <Dropdown\r\n          placeholder=\"Select Sector\"\r\n          onChange={handleSectorChange}\r\n          fluid\r\n          search\r\n          selection\r\n          value={product.sector}\r\n        >\r\n          <select>\r\n            <option disabled selected>Select</option>\r\n            {sectors.map((sector) => {\r\n              return (\r\n                <option title={sector.sectorId}>{sector.sectorName}</option>\r\n              );\r\n            })}\r\n          </select>\r\n        </Dropdown>\r\n\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"brand\"\r\n          placeholder=\"Brand Name\"\r\n          value={product.brand}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"valueOfProduct\"\r\n          type=\"numeber\"\r\n          step=\"0.01\"\r\n          placeholder=\"ValueOfProduct\"\r\n          value={product.valueOfProduct}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"modelYear\"\r\n          type=\"date\"\r\n          placeholder=\"Model Year\"\r\n          value={product.modelYear}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"quantity\"\r\n          type=\"number\"\r\n          placeholder=\"Quantity\"\r\n          value={product.quantity}\r\n        />\r\n        <Form.TextArea\r\n          onChange={handleInputChange}\r\n          name=\"description\"\r\n          rows={2}\r\n          placeholder=\"Description\"\r\n          value={product.description}\r\n        />\r\n        <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"]},"metadata":{},"sourceType":"module"}