{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semestri-IV\\\\Programim\\\\Shop Management\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport axios from 'axios';\nimport Faturimi from './FaturimiLayout/Faturimi';\nimport { Route } from 'react-router';\nimport ProductDashboard from '../../feautures/Details/DashboardDetails/Product/ProductDashboard';\nimport SectorDashboard from '../../feautures/Details/DashboardDetails/Sector/SectorDashboard';\nimport BrandDashboard from '../../feautures/Details/DashboardDetails/Brands/BrandDashboard';\nimport { Home } from './HomePageLayout/Home';\nimport Dash from './DashboardLayout/SideBarDashboard/dash';\nimport agent from '../API/agent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [sectors, setSectors] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleOpenCreateForm = () => {\n    setSelectedProduct(null);\n    setSelectedSector(null);\n    setEditMode(true);\n  };\n\n  const handleCreateProduct = product => {\n    agent.Products.productCreate(product).then(() => {\n      setProducts([...products, product]);\n      setSelectedProduct(product);\n      setEditMode(false);\n    });\n  };\n\n  const handleEditProduct = product => {\n    agent.Products.editProduct(product).then(() => {\n      setProducts([...products.filter(p => p.productId !== product.productId), product]);\n      setSelectedProduct(product);\n      setEditMode(false);\n    });\n  };\n\n  const handleDeleteProduct = productId => {\n    agent.Products.deleteProduct(productId).then(() => {\n      setProducts([...products.filter(p => p.productId !== productId)]);\n    });\n  };\n\n  const handleSelectProduct = productId => {\n    setSelectedProduct(products.filter(p => p.productId === productId)[0]);\n    setEditMode(false);\n  };\n\n  const [selectedSector, setSelectedSector] = useState(null);\n\n  const handleCreateSector = sector => {\n    setSectors([...sectors, sector]);\n    setSelectedSector(sector);\n    setEditMode(false);\n  };\n\n  const handleEditSector = sector => {\n    setSectors([...sectors.filter(s => s.sectorId !== sector.sectorId), sector]);\n    setSelectedSector(sector);\n    setEditMode(false);\n  };\n\n  const handleDeleteSector = sectorId => {\n    setSectors([...sectors.filter(s => s.sectorId !== sectorId)]);\n  };\n\n  const handleSelectSector = sectorId => {\n    setSelectedSector(sectors.filter(s => s.sectorId === sectorId)[0]);\n    setEditMode(false);\n  };\n\n  const [selectedBrand, setSelectedBrand] = useState(null);\n\n  const handleCreateBrand = brand => {\n    setBrands([...brands, brand]);\n    setSelectedBrand(brand);\n    setEditMode(false);\n  };\n\n  const handleEditBrand = brand => {\n    setBrands([...brands.filter(b => b.brandId !== brand.brandId), brand]);\n    setSelectedBrand(brand);\n    setEditMode(false);\n  };\n\n  const handleDeleteBrand = brandId => {\n    setBrands([...brands.filter(b => b.brandId !== brandId)]);\n  };\n\n  const handleSelectBrand = brandId => {\n    setSelectedBrand(brands.filter(b => b.brandId === brandId)[0]);\n    setEditMode(false);\n  };\n\n  useEffect(() => {\n    agent.Products.productList().then(response => {\n      let products = [];\n      response.forEach(product => {\n        product.productName = product.productName.split(\".\")[0];\n        products.push(product);\n      });\n      setProducts(products);\n    });\n  }, []);\n  useEffect(() => {\n    agent.Sectors.sectorList().then(response => {\n      let sectors = [];\n      response.forEach(sector => {\n        sector.sectorName = sector.sectorName.split(\".\")[0];\n        sectors.push(sector);\n      });\n      setSectors(sectors);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/brand\").then(response => {\n      let brands = [];\n      response.data.forEach(brand => {\n        brand.brandName = brand.brandName.split(\".\")[0];\n        brands.push(brand);\n      });\n      setBrands(brands);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/faturimi\",\n      component: Faturimi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      component: Dash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: Home,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard/productmaster/product\",\n      children: /*#__PURE__*/_jsxDEV(ProductDashboard, {\n        products: products,\n        selectProduct: handleSelectProduct,\n        selectedProduct: selectedProduct,\n        editMode: editMode,\n        setEditMode: setEditMode,\n        setSelectedProduct: setSelectedProduct,\n        createProduct: handleCreateProduct,\n        editProduct: handleEditProduct,\n        deleteProduct: handleDeleteProduct,\n        openCreateForm: handleOpenCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard/productmaster/sectors\",\n      children: /*#__PURE__*/_jsxDEV(SectorDashboard, {\n        sectors: sectors,\n        selectSector: handleSelectSector,\n        selectedSector: selectedSector,\n        editMode: editMode,\n        setEditMode: setEditMode,\n        setSelectedSector: setSelectedSector,\n        createSector: handleCreateSector,\n        editSector: handleEditSector,\n        deleteSector: handleDeleteSector,\n        openCreateForm: handleOpenCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard/productmaster/brands\",\n      children: /*#__PURE__*/_jsxDEV(BrandDashboard, {\n        brands: brands,\n        selectBrand: handleSelectBrand,\n        selectedBrand: selectedBrand,\n        editMode: editMode,\n        setEditMode: setEditMode,\n        setSelectedBrand: setSelectedBrand,\n        createBrand: handleCreateBrand,\n        editBrand: handleEditBrand,\n        deleteBrand: handleDeleteBrand,\n        openCreateForm: handleOpenCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"b7Pw/o8MSGEzpqXJC+xdv70O77Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Semestri-IV/Programim/Shop Management/client-app/src/app/layout/App.tsx"],"names":["React","useState","useEffect","Container","axios","Faturimi","Route","ProductDashboard","SectorDashboard","BrandDashboard","Home","Dash","agent","App","products","setProducts","sectors","setSectors","brands","setBrands","selectedProduct","setSelectedProduct","editMode","setEditMode","handleOpenCreateForm","setSelectedSector","handleCreateProduct","product","Products","productCreate","then","handleEditProduct","editProduct","filter","p","productId","handleDeleteProduct","deleteProduct","handleSelectProduct","selectedSector","handleCreateSector","sector","handleEditSector","s","sectorId","handleDeleteSector","handleSelectSector","selectedBrand","setSelectedBrand","handleCreateBrand","brand","handleEditBrand","b","brandId","handleDeleteBrand","handleSelectBrand","productList","response","forEach","productName","split","push","Sectors","sectorList","sectorName","get","data","brandName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,gBAAP,MAA6B,mEAA7B;AACA,OAAOC,eAAP,MAA4B,iEAA5B;AAGA,OAAOC,cAAP,MAA2B,gEAA3B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAa,EAAb,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAY,EAAZ,CAAtC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAW,EAAX,CAApC;AAEE,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CACpD,IADoD,CAAtD;AAGA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMuB,oBAAoB,GAAG,MAAM;AACjCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAI,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAEAF,IAAAA,WAAW,CAAC,IAAD,CAAX;AAED,GAND;;AAQA,QAAMG,mBAAmB,GAAIC,OAAD,IAAuB;AACjDf,IAAAA,KAAK,CAACgB,QAAN,CAAeC,aAAf,CAA6BF,OAA7B,EAAsCG,IAAtC,CAA2C,MAAI;AAC7Cf,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAca,OAAd,CAAD,CAAX;AACAN,MAAAA,kBAAkB,CAACM,OAAD,CAAlB;AACAJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAJD;AAKD,GAND;;AAQA,QAAMQ,iBAAiB,GAAIJ,OAAD,IAAuB;AAC/Cf,IAAAA,KAAK,CAACgB,QAAN,CAAeI,WAAf,CAA2BL,OAA3B,EAAoCG,IAApC,CAAyC,MAAI;AAC3Cf,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAACmB,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgBR,OAAO,CAACQ,SAA7C,CAAJ,EAA6DR,OAA7D,CAAD,CAAX;AACAN,MAAAA,kBAAkB,CAACM,OAAD,CAAlB;AACAJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAJD;AAKD,GAND;;AAQA,QAAMa,mBAAmB,GAAID,SAAD,IAAuB;AACjDvB,IAAAA,KAAK,CAACgB,QAAN,CAAeS,aAAf,CAA6BF,SAA7B,EAAwCL,IAAxC,CAA6C,MAAI;AAC/Cf,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAACmB,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgBA,SAArC,CAAJ,CAAD,CAAX;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMG,mBAAmB,GAAIH,SAAD,IAAuB;AACjDd,IAAAA,kBAAkB,CAACP,QAAQ,CAACmB,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgBA,SAArC,EAAgD,CAAhD,CAAD,CAAlB;AACAZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAIA,QAAM,CAACgB,cAAD,EAAiBd,iBAAjB,IAAsCxB,QAAQ,CAClD,IADkD,CAApD;;AAIA,QAAMuC,kBAAkB,GAAIC,MAAD,IAAqB;AAC9CxB,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAayB,MAAb,CAAD,CAAV;AACAhB,IAAAA,iBAAiB,CAACgB,MAAD,CAAjB;AACAlB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD;;AAMA,QAAMmB,gBAAgB,GAAID,MAAD,IAAqB;AAC5CxB,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAO,CAACiB,MAAR,CAAeU,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeH,MAAM,CAACG,QAA1C,CAAJ,EAAyDH,MAAzD,CAAD,CAAV;AACAhB,IAAAA,iBAAiB,CAACgB,MAAD,CAAjB;AACAlB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD;;AAMA,QAAMsB,kBAAkB,GAAID,QAAD,IAAsB;AAC/C3B,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAO,CAACiB,MAAR,CAAeU,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeA,QAAnC,CAAJ,CAAD,CAAV;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAIF,QAAD,IAAsB;AAC/CnB,IAAAA,iBAAiB,CAACT,OAAO,CAACiB,MAAR,CAAeU,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeA,QAAnC,EAA6C,CAA7C,CAAD,CAAjB;AACArB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAIA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoC/C,QAAQ,CAChD,IADgD,CAAlD;;AAIA,QAAMgD,iBAAiB,GAAIC,KAAD,IAAmB;AAC3C/B,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYgC,KAAZ,CAAD,CAAT;AACAF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACA3B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD;;AAMA,QAAM4B,eAAe,GAAID,KAAD,IAAmB;AACzC/B,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAM,CAACe,MAAP,CAAcmB,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,KAAK,CAACG,OAAvC,CAAJ,EAAqDH,KAArD,CAAD,CAAT;AACAF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACA3B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD;;AAMA,QAAM+B,iBAAiB,GAAID,OAAD,IAAqB;AAC7ClC,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAM,CAACe,MAAP,CAAcmB,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcA,OAAjC,CAAJ,CAAD,CAAT;AACD,GAFD;;AAIA,QAAME,iBAAiB,GAAIF,OAAD,IAAqB;AAC7CL,IAAAA,gBAAgB,CAAC9B,MAAM,CAACe,MAAP,CAAcmB,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcA,OAAjC,EAA0C,CAA1C,CAAD,CAAhB;AACA9B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACgB,QAAN,CAAe4B,WAAf,GACG1B,IADH,CACS2B,QAAD,IAAc;AAClB,UAAI3C,QAAoB,GAAG,EAA3B;AACA2C,MAAAA,QAAQ,CAACC,OAAT,CAAkB/B,OAAD,IAAa;AAC5BA,QAAAA,OAAO,CAACgC,WAAR,GAAsBhC,OAAO,CAACgC,WAAR,CAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAtB;AACA9C,QAAAA,QAAQ,CAAC+C,IAAT,CAAclC,OAAd;AACD,OAHD;AAIAZ,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACkD,OAAN,CAAcC,UAAd,GACGjC,IADH,CACS2B,QAAD,IAAc;AAClB,UAAIzC,OAAkB,GAAG,EAAzB;AACAyC,MAAAA,QAAQ,CAACC,OAAT,CAAkBjB,MAAD,IAAY;AAC3BA,QAAAA,MAAM,CAACuB,UAAP,GAAoBvB,MAAM,CAACuB,UAAP,CAAkBJ,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAApB;AACA5C,QAAAA,OAAO,CAAC6C,IAAR,CAAapB,MAAb;AACD,OAHD;AAIAxB,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACF6D,GADH,CACiB,iCADjB,EAEGnC,IAFH,CAES2B,QAAD,IAAc;AAClB,UAAIvC,MAAgB,GAAG,EAAvB;AACAuC,MAAAA,QAAQ,CAACS,IAAT,CAAcR,OAAd,CAAuBR,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACiB,SAAN,GAAkBjB,KAAK,CAACiB,SAAN,CAAgBP,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB;AACA1C,QAAAA,MAAM,CAAC2C,IAAP,CAAYX,KAAZ;AACD,OAHD;AAIA/B,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;AAiBA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEb;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEM;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAED,IAA3B;AAAiC,MAAA,KAAK;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kCAAZ;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,QAAQ,EAAEI,QADZ;AAEE,QAAA,aAAa,EAAEwB,mBAFjB;AAGE,QAAA,eAAe,EAAElB,eAHnB;AAIE,QAAA,QAAQ,EAAEE,QAJZ;AAKE,QAAA,WAAW,EAAEC,WALf;AAME,QAAA,kBAAkB,EAAEF,kBANtB;AAOE,QAAA,aAAa,EAAEK,mBAPjB;AAQE,QAAA,WAAW,EAAEK,iBARf;AASE,QAAA,aAAa,EAAEK,mBATjB;AAUE,QAAA,cAAc,EAAEZ;AAVlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAoBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kCAAZ;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,OAAO,EAAER,OADX;AAEE,QAAA,YAAY,EAAE8B,kBAFhB;AAGE,QAAA,cAAc,EAAEP,cAHlB;AAIE,QAAA,QAAQ,EAAEjB,QAJZ;AAKE,QAAA,WAAW,EAAEC,WALf;AAME,QAAA,iBAAiB,EAAEE,iBANrB;AAOE,QAAA,YAAY,EAAEe,kBAPhB;AAQE,QAAA,UAAU,EAAEE,gBARd;AASE,QAAA,YAAY,EAAEG,kBAThB;AAUE,QAAA,cAAc,EAAErB;AAVlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF,eAkCE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iCAAZ;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,MAAM,EAAEN,MADV;AAEE,QAAA,WAAW,EAAEqC,iBAFf;AAGE,QAAA,aAAa,EAAER,aAHjB;AAIE,QAAA,QAAQ,EAAEzB,QAJZ;AAKE,QAAA,WAAW,EAAEC,WALf;AAME,QAAA,gBAAgB,EAAEyB,gBANpB;AAOE,QAAA,WAAW,EAAEC,iBAPf;AAQE,QAAA,SAAS,EAAEE,eARb;AASE,QAAA,WAAW,EAAEG,iBATf;AAUE,QAAA,cAAc,EAAE9B;AAVlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDH,CA1LD;;GAAMX,G;;KAAAA,G;AA6LN,eAAeA,GAAf","sourcesContent":["import React,{useState , useEffect } from 'react';\r\nimport {Container} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport Faturimi from './FaturimiLayout/Faturimi';\r\nimport { IProduct } from '../models/product';\r\nimport { Route } from 'react-router';\r\nimport ProductDashboard from '../../feautures/Details/DashboardDetails/Product/ProductDashboard';\r\nimport SectorDashboard from '../../feautures/Details/DashboardDetails/Sector/SectorDashboard';\r\nimport { ISector } from '../models/sector';\r\nimport { IBrand } from '../models/brand';\r\nimport BrandDashboard from '../../feautures/Details/DashboardDetails/Brands/BrandDashboard';\r\nimport { Home } from './HomePageLayout/Home';\r\nimport Dash from './DashboardLayout/SideBarDashboard/dash';\r\nimport agent from '../API/agent';\r\n\r\n\r\n\r\nconst App = () => { \r\n \r\n  const [products, setProducts] = useState<IProduct[]>([]);\r\n  const [sectors, setSectors] = useState<ISector[]>([]);\r\n  const [brands, setBrands] = useState<IBrand[]>([]);\r\n  \r\n    const [selectedProduct, setSelectedProduct] = useState<IProduct | null>(\r\n      null\r\n    );\r\n    const [editMode, setEditMode] = useState(false);\r\n  \r\n    const handleOpenCreateForm = () => {\r\n      setSelectedProduct(null);\r\n      setSelectedSector(null);\r\n\r\n      setEditMode(true);\r\n      \r\n    }\r\n  \r\n    const handleCreateProduct = (product: IProduct) => {\r\n      agent.Products.productCreate(product).then(()=>{\r\n        setProducts([...products, product]);\r\n        setSelectedProduct(product);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleEditProduct = (product: IProduct) => {\r\n      agent.Products.editProduct(product).then(()=>{\r\n        setProducts([...products.filter(p => p.productId !== product.productId), product])\r\n        setSelectedProduct(product);\r\n        setEditMode(false);\r\n      })\r\n    }\r\n  \r\n    const handleDeleteProduct = (productId: string) => {\r\n      agent.Products.deleteProduct(productId).then(()=>{\r\n        setProducts([...products.filter(p => p.productId !== productId)])\r\n      })\r\n    }\r\n  \r\n    const handleSelectProduct = (productId: string) => {\r\n      setSelectedProduct(products.filter(p => p.productId === productId)[0]);\r\n      setEditMode(false);\r\n    };\r\n    const [selectedSector, setSelectedSector] = useState<ISector | null>(\r\n      null\r\n    );\r\n  \r\n    const handleCreateSector = (sector: ISector) => {\r\n      setSectors([...sectors, sector]);\r\n      setSelectedSector(sector);\r\n      setEditMode(false);\r\n    }\r\n  \r\n    const handleEditSector = (sector: ISector) => {\r\n      setSectors([...sectors.filter(s => s.sectorId !== sector.sectorId), sector])\r\n      setSelectedSector(sector);\r\n      setEditMode(false);\r\n    }\r\n  \r\n    const handleDeleteSector = (sectorId: string) => {\r\n      setSectors([...sectors.filter(s => s.sectorId !== sectorId)])\r\n    }\r\n  \r\n    const handleSelectSector = (sectorId: string) => {\r\n      setSelectedSector(sectors.filter(s => s.sectorId === sectorId)[0]);\r\n      setEditMode(false);\r\n    };\r\n    const [selectedBrand, setSelectedBrand] = useState<IBrand | null>(\r\n      null\r\n    );\r\n  \r\n    const handleCreateBrand = (brand: IBrand) => {\r\n      setBrands([...brands, brand]);\r\n      setSelectedBrand(brand);\r\n      setEditMode(false);\r\n    }\r\n  \r\n    const handleEditBrand = (brand: IBrand) => {\r\n      setBrands([...brands.filter(b => b.brandId !== brand.brandId), brand])\r\n      setSelectedBrand(brand);\r\n      setEditMode(false);\r\n    }\r\n  \r\n    const handleDeleteBrand = (brandId: string) => {\r\n      setBrands([...brands.filter(b => b.brandId !== brandId)])\r\n    }\r\n  \r\n    const handleSelectBrand = (brandId: string) => {\r\n      setSelectedBrand(brands.filter(b => b.brandId === brandId)[0]);\r\n      setEditMode(false);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      agent.Products.productList()\r\n        .then((response) => {\r\n          let products: IProduct[] = [];\r\n          response.forEach((product) => {\r\n            product.productName = product.productName.split(\".\")[0];\r\n            products.push(product);\r\n          });\r\n          setProducts(products);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n      agent.Sectors.sectorList()\r\n        .then((response) => {\r\n          let sectors: ISector[] = [];\r\n          response.forEach((sector) => {\r\n            sector.sectorName = sector.sectorName.split(\".\")[0];\r\n            sectors.push(sector);\r\n          });\r\n          setSectors(sectors);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n      axios\r\n        .get<IBrand[]>(\"http://localhost:5000/api/brand\")\r\n        .then((response) => {\r\n          let brands: IBrand[] = [];\r\n          response.data.forEach((brand) => {\r\n            brand.brandName = brand.brandName.split(\".\")[0];\r\n            brands.push(brand);\r\n          });\r\n          setBrands(brands);\r\n        });\r\n    }, []);\r\n  \r\n\r\n\r\n    \r\n\r\n    return (\r\n      <Container>\r\n        <Route path=\"/faturimi\" component={Faturimi} />\r\n\r\n        <Route path=\"/dashboard\" component={Dash} />\r\n        <Route path=\"/\" component={Home} exact/>\r\n\r\n        <Route path=\"/dashboard/productmaster/product\">\r\n          <ProductDashboard\r\n            products={products}\r\n            selectProduct={handleSelectProduct}\r\n            selectedProduct={selectedProduct}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedProduct={setSelectedProduct}\r\n            createProduct={handleCreateProduct}\r\n            editProduct={handleEditProduct}\r\n            deleteProduct={handleDeleteProduct}\r\n            openCreateForm={handleOpenCreateForm}\r\n          />\r\n        </Route>\r\n        <Route path=\"/dashboard/productmaster/sectors\">\r\n          <SectorDashboard\r\n            sectors={sectors}\r\n            selectSector={handleSelectSector}\r\n            selectedSector={selectedSector}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedSector={setSelectedSector}\r\n            createSector={handleCreateSector}\r\n            editSector={handleEditSector}\r\n            deleteSector={handleDeleteSector}\r\n            openCreateForm={handleOpenCreateForm}\r\n          />\r\n        </Route>\r\n        <Route path=\"/dashboard/productmaster/brands\">\r\n          <BrandDashboard\r\n            brands={brands}\r\n            selectBrand={handleSelectBrand}\r\n            selectedBrand={selectedBrand}\r\n            editMode={editMode}\r\n            setEditMode={setEditMode}\r\n            setSelectedBrand={setSelectedBrand}\r\n            createBrand={handleCreateBrand}\r\n            editBrand={handleEditBrand}\r\n            deleteBrand={handleDeleteBrand}\r\n            openCreateForm={handleOpenCreateForm}\r\n          />\r\n        </Route>\r\n      </Container>\r\n    );\r\n    \r\n    \r\n}\r\n \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}