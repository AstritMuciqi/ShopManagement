{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semestri-IV\\\\Programim\\\\Shop Management\\\\client-app\\\\src\\\\feautures\\\\Crud-Forma\\\\sectorForma.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Segment, Form, Button } from 'semantic-ui-react';\nimport { v4 as uuid } from 'uuid';\nimport '../../app/layout/DashboardLayout/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SectorForm = ({\n  setEditMode,\n  sector: initialFormState,\n  editSector,\n  createSector\n}) => {\n  _s();\n\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        sectorId: '',\n        sectorName: ''\n      };\n    }\n  };\n\n  const [sector, setSector] = useState(initializeForm);\n\n  const handleSubmit = () => {\n    if (sector.sectorId.length === 0) {\n      let newSector = { ...sector,\n        sectorId: uuid()\n      };\n      createSector(newSector);\n    } else {\n      editSector(sector);\n    }\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setSector({ ...sector,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    clearing: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        onChange: handleInputChange,\n        name: \"sectorName\",\n        placeholder: \"Sector Name\",\n        value: sector.sectorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        floated: \"right\",\n        positive: true,\n        type: \"submit\",\n        content: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setEditMode(false),\n        floated: \"right\",\n        type: \"button\",\n        content: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SectorForm, \"AHP3go8nCHJ1DzxIMC9I7s7odiU=\");\n\n_c = SectorForm;\nexport default SectorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectorForm\");","map":{"version":3,"sources":["D:/Semestri-IV/Programim/Shop Management/client-app/src/feautures/Crud-Forma/sectorForma.tsx"],"names":["React","useState","Segment","Form","Button","v4","uuid","SectorForm","setEditMode","sector","initialFormState","editSector","createSector","initializeForm","sectorId","sectorName","setSector","handleSubmit","length","newSector","handleInputChange","event","name","value","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAsC,mBAAtC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAO,6CAAP;;;AAUA,MAAMC,UAA4B,GAAG,CAAC;AACpCC,EAAAA,WADoC;AAEpCC,EAAAA,MAAM,EAAEC,gBAF4B;AAGpCC,EAAAA,UAHoC;AAIpCC,EAAAA;AAJoC,CAAD,KAK/B;AAAA;;AACJ,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIH,gBAAJ,EAAsB;AACpB,aAAOA,gBAAP;AACD,KAFD,MAEO;AACL,aAAO;AACLI,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,UAAU,EAAE;AAFP,OAAP;AAID;AACF,GATD;;AAWA,QAAM,CAACN,MAAD,EAASO,SAAT,IAAsBf,QAAQ,CAAUY,cAAV,CAApC;;AAEA,QAAMI,YAAY,GAAG,MAAM;AACzB,QAAIR,MAAM,CAACK,QAAP,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,UAAIC,SAAS,GAAG,EACd,GAAGV,MADW;AAEdK,QAAAA,QAAQ,EAAER,IAAI;AAFA,OAAhB;AAIAM,MAAAA,YAAY,CAACO,SAAD,CAAZ;AACD,KAND,MAMO;AACLR,MAAAA,UAAU,CAACF,MAAD,CAAV;AACD;AACF,GAVD;;AAYA,QAAMW,iBAAiB,GACrBC,KADwB,IAErB;AACH,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,aAA9B;AACAR,IAAAA,SAAS,CAAC,EAAE,GAAGP,MAAL;AAAa,OAACa,IAAD,GAAQC;AAArB,KAAD,CAAT;AACD,GALD;;AAOA,sBACE,QAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AACE,QAAA,QAAQ,EAAEG,iBADZ;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,KAAK,EAAEX,MAAM,CAACM;AAJhB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,QAAQ,MAAhC;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,KAAD,CAD5B;AAEE,QAAA,OAAO,EAAC,OAFV;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzDD;;GAAMD,U;;KAAAA,U;AA2DN,eAAeA,UAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport '../../app/layout/DashboardLayout/styles.css';\r\nimport { ISector } from '../../app/models/sector';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  sector: ISector;\r\n  createSector: (sector: ISector) => void;\r\n  editSector: (sector: ISector) => void;\r\n}\r\n\r\nconst SectorForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  sector: initialFormState,\r\n  editSector,\r\n  createSector\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        sectorId: '',\r\n        sectorName: '',  \r\n      };\r\n    }\r\n  };\r\n\r\n  const [sector, setSector] = useState<ISector>(initializeForm);\r\n\r\n  const handleSubmit = () => {\r\n    if (sector.sectorId.length === 0) {\r\n      let newSector = {\r\n        ...sector,\r\n        sectorId: uuid()\r\n      };\r\n      createSector(newSector);\r\n    } else {\r\n      editSector(sector);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (\r\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = event.currentTarget;\r\n    setSector({ ...sector, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name='sectorName'\r\n          placeholder='Sector Name'\r\n          value={sector.sectorName}\r\n        />\r\n        <Button floated='right' positive type='submit' content='Submit' />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated='right'\r\n          type='button'\r\n          content='Cancel'\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default SectorForm;\r\n"]},"metadata":{},"sourceType":"module"}